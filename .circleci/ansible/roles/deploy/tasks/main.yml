
# - name: "create directory"
#   file:
#     path: ~/web
#     mode: 0777
#     state: directory
#     owner: ubuntu
#     group: ubuntu

# - name: "copy files over to instance"
#   copy:
#     src: artifact.tar.gz
#     dest: ~/artifact.tar.gz

# - name: "install tar and gzip"
#   become: true
#   command: |
#     apt-get install tar gzip -y

# # - name: "Check for tar file"
# #   become: true
# #   command: ls -l ~/web

# - name: "extract backend file"
#   become: true
#   command: |
#     tar -xzvf ~/artifact.tar.gz
#     rm -rf ~/artifact.tar.gz

# - name: "start backend with pm2"
#   become: true
#   command: |
#     npm install
#     pm2 stop default
#     pm2 start -- start
- name: "show remote environment"
  shell: env

# - name: "copy backend binaries"
#   become: true
#   synchronize:
#     src: ../../backend/dist
#     dest: /home/ubuntu/node_app
#     recursive: true

# - name: "copy node_modules"
#   become: true
#   synchronize:
#     src: ../../backend/node_modules
#     dest: /home/ubuntu/node_app
#     recursive: true
# - name: "install dependencies."
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#     state: latest
#     update_cache: yes

# - name: "install Typescript"
#   become: true
#   npm:
#     name: typescript
#     global: true
#     production: true
#     state: present

# - name: "install pm2"
#   become: true
#   npm:
#     name: pm2
#     global: yes
#     production: yes
#     state: present

- name: "Extract Artifact"
  become: true
  unarchive:
        src: files/artifact.tar.gz
        dest: ~/

- name: "start server"
  become: true
  shell: | 
        npm install
        pm2 stop default
        pm2 start npm -- start

# - name: "delete anything that might already be running"
#   become: true
#   command: pm2 delete all
#   ignore_errors: true

# - name: "start server"
#   become: true
#   command: pm2 start -f ./main.js
#   args:
#     chdir: /home/ubuntu/node_app/dist
  environment:
     ENVIRONMENT: production
     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
     TYPEORM_MIGRATIONS_DIR: "./migrations"
     TYPEORM_MIGRATIONS: "./migrations/*.js"
     TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
  

